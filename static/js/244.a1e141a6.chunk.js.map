{"version":3,"file":"static/js/244.a1e141a6.chunk.js","mappings":"gMAEaA,E,QAAeC,EAAAA,IAAH,0O,SCkBzB,EAjBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,kLChBYC,EAAoBT,EAAAA,EAAAA,GAAH,oEAKjBU,EAAiBV,EAAAA,EAAAA,GAAH,sCAIdW,EAAgBX,EAAAA,EAAAA,EAAH,8CAIbY,EAAYZ,EAAAA,EAAAA,EAAH,6C,mBCuCtB,EA1CgB,WACd,OAA8Ba,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGKK,EAAAA,EAAAA,IAAWJ,GAHhB,OAGRK,EAHQ,OAIdV,EAAWU,EAAKC,SAJF,iDAMdC,EAAAA,EAAAA,GAAYV,GANE,yBAQdE,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAa,SAACU,EAAA,EAAD,IACbZ,IAAS,uBAAIA,IACbF,EAAQe,OAAS,GAChB,SAACpB,EAAD,UACGK,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,SAACvB,EAAD,UAAiBsB,KACjB,SAACrB,EAAD,UAAgBsB,MAFTF,EADE,OAQf,SAACnB,EAAD,UAAW,+CAIlB,C,qBChDD,IAJoB,SAAAK,GAClBA,EAAS,sDACV,C,mMCAKiB,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,qCACmBC,EADnB,iBACmCE,EADnC,oBADO,cACxBE,EADwB,yBAIvBA,EAASd,MAJc,2CAAH,sDAOhBe,EAAW,mCAAG,WAAMpB,GAAN,uFACFkB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAd,EADA,oBACmBe,EADnB,oBADE,cACnBI,EADmB,yBAIlBA,EAASd,MAJS,2CAAH,sDAOXgB,EAAW,mCAAG,WAAMrB,GAAN,uFACFkB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAd,EADA,4BAC2Be,EAD3B,oBADE,cACnBI,EADmB,yBAIlBA,EAASd,MAJS,2CAAH,sDAOXD,EAAU,mCAAG,WAAMJ,GAAN,uFACDkB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAd,EADA,4BAC2Be,EAD3B,2BADC,cAClBI,EADkB,yBAIjBA,EAASd,MAJQ,2CAAH,sDAOViB,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,+BACaS,EADb,wCACsDR,EADtD,2BADK,cACtBI,EADsB,yBAIrBA,EAASd,MAJY,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","helpers/index.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(46, 47, 66, 0.2);\n  z-index: 1000;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"#f87719\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const StyledReviewsList = styled.ul`\n  margin-top: 40px;\n  padding-left: 20px;\n`;\n\nexport const StyledReviewer = styled.h3`\n  margin: 0;\n`;\n\nexport const StyledReviews = styled.p`\n  line-height: 22px;\n`;\n\nexport const NoReviews = styled.p`\n  margin-top: 40px;\n`;\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\nimport {\n  NoReviews,\n  StyledReviewer,\n  StyledReviews,\n  StyledReviewsList,\n} from './Reviews.styled';\nimport handleError from 'helpers';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        handleError(setError);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {reviews.length > 0 ? (\n        <StyledReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <StyledReviewer>{author}</StyledReviewer>\n              <StyledReviews>{content}</StyledReviews>\n            </li>\n          ))}\n        </StyledReviewsList>\n      ) : (\n        <NoReviews>We don't have any reviews for this movie</NoReviews>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const handleError = setError => {\n  setError('Oops, some error occurred. Please, try again later.');\n};\n\nexport default handleError;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '07c0e032482e785f96b6eca01e8f41dd';\n\nexport const getTrendingFilms = async page => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getFilmById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCastFilm = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${movieName}&include_adult=false&api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["StyledLoader","styled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","StyledReviewsList","StyledReviewer","StyledReviews","NoReviews","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getReviews","data","results","handleError","Loader","length","map","id","author","content","BASE_URL","API_KEY","getTrendingFilms","page","axios","response","getFilmById","getCastFilm","getMovieByName","movieName"],"sourceRoot":""}