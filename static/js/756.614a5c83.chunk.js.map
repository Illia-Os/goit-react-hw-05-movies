{"version":3,"file":"static/js/756.614a5c83.chunk.js","mappings":"gMAEaA,E,QAAeC,EAAAA,IAAH,0O,SCkBzB,EAjBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAO,MACPC,MAAM,MACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,qBCdD,IAJoB,SAAAC,GAClBA,EAAS,sDACV,C,gKCiFD,EApEwB,SAAC,GAUlB,IAAD,QATJC,KACEC,EAQE,EARFA,YACAC,EAOE,EAPFA,MACAC,EAME,EANFA,KACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,OAGIC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAOpD,OACE,gCACE,UAAC,KAAD,CAAgBC,GAAIJ,EAAaK,QAAjC,WACE,SAAC,KAAD,IAAuB,cAGzB,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,IACEf,EAAW,8CACgCA,EADhC,KAEPgB,EAENC,IAAG,OAAEhB,QAAF,IAAEA,EAAAA,EAASC,KAEhB,UAAC,KAAD,YACE,iCACGD,QADH,IACGA,EAAAA,EAASC,EACTG,GAAY,mBAASA,QAAT,IAASA,OAAT,EAASA,EAAca,UAAU,EAAG,GAApC,SAEf,UAAC,KAAD,WAAc,eACCC,KAAKC,MAAOjB,EAAe,GAAM,KAAK,QAErD,wBAAI,cACJ,uBAAIC,KAEG,OAANE,QAAM,IAANA,OAAA,EAAAA,EAAQe,QAAS,IAAK,wBAAI,YAC3B,wBAAU,OAANf,QAAM,IAANA,OAAA,EAAAA,EAAQe,QAAS,GA/BRf,EAAOgB,KAAI,SAAAC,GAAK,OAAIA,EAAMrB,IAAV,IACjBsB,KAAK,eAiCrB,UAAC,KAAD,YACE,yBACE,SAAC,KAAD,CAAYX,GAAG,OAAf,SAAsB,YAExB,yBACE,SAAC,KAAD,CAAYA,GAAG,UAAf,SAAyB,kBAG7B,SAAC,EAAAY,SAAD,WACE,SAAC,KAAD,QAIP,E,8BCpCD,EAlCqB,WACnB,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAO3B,EAAP,KAAa4B,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAc9B,EAAd,KACA,GAAkC4B,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGKK,EAAAA,EAAAA,IAAYJ,GAHjB,OAGRK,EAHQ,OAIdT,EAAQS,GAJM,iDAMdC,EAAAA,EAAAA,GAAYvC,GANE,yBAQdgC,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,CAACH,KAGF,gCACGF,IAAa,SAACS,EAAA,EAAD,IACbV,GACC,uBAAIA,IAEJ7B,IAAS8B,IAAa,SAAC,EAAD,CAAiB9B,KAAMA,MAIpD,C,mMCrCKwC,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,WAAMC,GAAN,uFACPC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,qCACmBC,EADnB,iBACmCE,EADnC,oBADO,cACxBE,EADwB,yBAIvBA,EAASR,MAJc,2CAAH,sDAOhBD,EAAW,mCAAG,WAAMJ,GAAN,uFACFY,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAR,EADA,oBACmBS,EADnB,oBADE,cACnBI,EADmB,yBAIlBA,EAASR,MAJS,2CAAH,sDAOXS,EAAW,mCAAG,WAAMd,GAAN,uFACFY,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAR,EADA,4BAC2BS,EAD3B,oBADE,cACnBI,EADmB,yBAIlBA,EAASR,MAJS,2CAAH,sDAOXU,EAAU,mCAAG,WAAMf,GAAN,uFACDY,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAR,EADA,4BAC2BS,EAD3B,2BADC,cAClBI,EADkB,yBAIjBA,EAASR,MAJQ,2CAAH,sDAOVW,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,+BACaS,EADb,wCACsDR,EADtD,2BADK,cACtBI,EADsB,yBAIrBA,EAASR,MAJY,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","helpers/index.js","components/FilmDescription/FilmDescription.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(46, 47, 66, 0.2);\n  z-index: 1000;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"100\"\n        width=\"100\"\n        radius=\"9\"\n        color=\"#f87719\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n\nexport default Loader;\n","const handleError = setError => {\n  setError('Oops, some error occurred. Please, try again later.');\n};\n\nexport default handleError;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledFilmImg,\n  StyledDescription,\n  StyledFilmDescription,\n  StyledLink,\n  StyledNavList,\n  StyledGenres,\n  StyledLinkBack,\n  StyledArrowLeftIcon,\n} from './FilmDescription.styled';\nimport { Suspense, useRef } from 'react';\nimport noImage from '../../images/no-image.jpg';\n\nconst FilmDescription = ({\n  film: {\n    poster_path,\n    title,\n    name,\n    vote_average,\n    overview,\n    release_date,\n    genres,\n  },\n}) => {\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const getGenres = () => {\n    const genresName = genres.map(genre => genre.name);\n    return genresName.join(', ');\n  };\n\n  return (\n    <section>\n      <StyledLinkBack to={backLinkHref.current}>\n        <StyledArrowLeftIcon />\n        Go back\n      </StyledLinkBack>\n      <StyledFilmDescription>\n        <StyledFilmImg\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original/${poster_path} `\n              : noImage\n          }\n          alt={title ?? name}\n        />\n        <StyledDescription>\n          <h1>\n            {title ?? name}\n            {release_date && ` (${release_date?.substring(0, 4)})`}\n          </h1>\n          <StyledGenres>\n            User score: {Math.round((vote_average / 10) * 100)}%\n          </StyledGenres>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n\n          {genres?.length > 0 && <h2>Genres</h2>}\n          <p>{genres?.length > 0 && getGenres()}</p>\n        </StyledDescription>\n      </StyledFilmDescription>\n      <StyledNavList>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </StyledNavList>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\n\nFilmDescription.propTypes = {\n  film: PropTypes.object,\n};\n\nexport default FilmDescription;\n","import FilmDescription from 'components/FilmDescription/FilmDescription';\nimport Loader from 'components/Loader/Loader';\nimport handleError from 'helpers';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmById } from 'services/api';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getFilmById(movieId);\n        setFilm(data);\n      } catch (error) {\n        handleError(setError);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        film && !isLoading && <FilmDescription film={film} />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '07c0e032482e785f96b6eca01e8f41dd';\n\nexport const getTrendingFilms = async page => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getFilmById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCastFilm = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieByName = async movieName => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${movieName}&include_adult=false&api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["StyledLoader","styled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","setError","film","poster_path","title","name","vote_average","overview","release_date","genres","location","useLocation","backLinkHref","useRef","state","from","to","current","src","noImage","alt","substring","Math","round","length","map","genre","join","Suspense","useState","setFilm","error","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getFilmById","data","handleError","Loader","BASE_URL","API_KEY","getTrendingFilms","page","axios","response","getCastFilm","getReviews","getMovieByName","movieName"],"sourceRoot":""}